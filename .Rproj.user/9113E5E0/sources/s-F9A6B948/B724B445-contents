
n <- 500
l <- 40
t <- 1:l

# generate a number of explanatory series
X <- matrix( rnorm( n * l ), ncol = n )
# signal
X[10:20,100:350] <- X[10:20,100:350] + 5
xbar <- sum(X)/prod(dim(X))
X <- X - xbar
scx <- sqrt(sum(X^2)/prod(dim(X)))
X <- X / scx

# generate a number of explanatory series
Xo <- matrix( rnorm( n * l ), ncol = n )
# signal
Xo[25:35,100:350] <- X[25:35,100:350] - 3
xbar <- sum(Xo)/prod(dim(Xo))
Xo <- Xo - xbar
scx <- sqrt(sum(Xo^2)/prod(dim(Xo)))
Xo <- Xo / scx

# # weight function
# mu <- 16
# sd <- 2.5
# theta <- c(mu/sd^2,-0.5/sd^2)
# u <-  theta[1]*t + theta[2]*t^2 
# mx <- max(u)
# u <- u - mx 
# u <- u - log( sum( exp(u) ) )
# w <- exp(u)
# plot(w,col="blue",type="h")

#B <- bs(1:40, degree = 4)
#w <- B %*% c(3.5,1.5,.0,.0)
# 
# # linear predictor
# Xw  <- X * w
# beta <- c(0,1)
# eta <- beta[1] + beta[2] * colSums(Xw)
# 
# # generation through latent variable method
# tau <- 0.5
# pr <- cdfALD( -eta, tau, 0, 1 )
# y <- rbinom( n, size=1, prob = 1-pr)
# sum(y)/n
# 
# 
# X2 <- rbind( X , matrix( rnorm(n*l), ncol=n) )
# 
# fitted <- distlag.mcmc( y, W = NULL, X = X2, tau=0.5, l=40, 
#                         weight.scheme = c("nealmon"), 
#                         nsamp = 25000, burn = 5000, thin = 4, sampmeth = "smmala" )

### generate with B-splines ###

th.true <- c(8,-7)# 0, 0)
B <- bs(1:40, degree = 2)
w <- B %*% th.true #rnorm(4,0,0.1)
w <- exp(w)
w <- w / sum(w)

points( 1:40, w, type="l", col="blue", lwd=2)

th.trueo <- c(15,7)# 0, 0)
B <- bs(1:40, degree = 2)
wo <- B %*% th.trueo #rnorm(4,0,0.1)
wo <- exp(wo)
wo <- wo / sum(wo)



# linear predictor
Xw  <- X * w[,1]
beta <- c(0,1)
eta <- beta[1] + beta[2] * colSums(Xw)

# linear predictor
Xwo  <- Xo * wo[,1]
beta <- c(-1,1,-1)
eta <- beta[1] + beta[2] * colSums(Xw) + beta[3] * colSums(Xwo)

# generation through latent variable method

tau <- 0.5
pr <- dlcdfALD( -eta, tau, 0, 1 )
y <- rbinom( n, size=1, prob = 1-pr)

X2 <- rbind( X , Xo)#matrix( rnorm(n*(l)), ncol=n) )
X2 <- rbind( X,  matrix( rnorm(2*n*l), ncol=n) )
#X2 <- rbind(matrix( rnorm(n*(l)), ncol=n), X )

fitted <- dlvarsel( y, W = NULL, X = X, m=4, tau=0.5, l=40, 
                        weight.scheme = c("exp-b-spline"), 
                        nsamp = 10^4, burn = 10^4, thin = 1, sampmeth = "smmala", dl.varsel = TRUE )

#th.true <- rnorm(4,0,0.1)
me <- apply( fitted$samples$theta, 1, mean )
me <- me[9:12]
# 
  th.true <- me#th.trueo
  B <- bs(1:40, degree = 4)
  w <- B %*% th.true
  w <- exp(w)
  w <- w / sum(w)
  plot( 1:40, w, type="l", col="green", lwd=3.5 )

# 
# for( k in sample(1:10000, size=100, replace = F) )
# {
#   B <- bs(1:40, degree = 2)
#   w <- B %*% fitted$samples$theta[,k] #rnorm(4,0,0.1)
#  w <- exp(w)
#   w <- w / sum(w)
#   points( 1:40, w, type="l", col="red", lwd=.5)
# }

